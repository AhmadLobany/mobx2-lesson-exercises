{"numFailedTestSuites":3,"numFailedTests":9,"numPassedTestSuites":0,"numPassedTests":1,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":3,"numTotalTests":10,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1557924528485,"success":false,"testResults":[{"console":null,"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise1 › restPopulation should be a computed value in your restaurant store, which automatically calculates the number of people in your restaurant\u001b[39m\u001b[22m\n\n    the restPopulation property should count the total number of people in the restaurant__stacktrace__\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 | \u001b[39m        expect(restaurantStore\u001b[33m.\u001b[39mrestPopulation\u001b[33m,\u001b[39m \u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 24 | \u001b[39m            \u001b[32m\"the restPopulation property should count the total number of people in the restaurant\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 25 | \u001b[39m            \u001b[33m.\u001b[39mtoBe(restPopulation \u001b[33m+\u001b[39m \u001b[35m2\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m             \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 26 | \u001b[39m    })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 27 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 28 | \u001b[39m    it (\u001b[32m'completeRes function should be a MobX action'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-1.test.js\u001b[39m\u001b[0m\u001b[2m:25:14)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise1 › completeRes function should complete the table with the given ID\u001b[39m\u001b[22m\n\n    the completeRes function should complete the table with the given ID__stacktrace__\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 39 | \u001b[39m        expect(bernard\u001b[33m.\u001b[39mcompleted\u001b[33m,\u001b[39m \u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 40 | \u001b[39m            \u001b[32m\"the completeRes function should complete the table with the given ID\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 41 | \u001b[39m            \u001b[33m.\u001b[39mtoBe(\u001b[33m!\u001b[39mcompleted)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m             \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 42 | \u001b[39m    })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 43 | \u001b[39m    \u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 44 | \u001b[39m    it(\u001b[32m\"completedTables should be a computed value in your restaurant store, which automatically calculates the number of tables that have been completed\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-1.test.js\u001b[39m\u001b[0m\u001b[2m:41:14)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise1 › completedTables should be a computed value in your restaurant store, which automatically calculates the number of tables that have been completed\u001b[39m\u001b[22m\n\n    the completedTables property should automatically update when a table is completed__stacktrace__\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 52 | \u001b[39m        expect(restaurantStore\u001b[33m.\u001b[39mcompletedTables\u001b[33m,\u001b[39m \u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 53 | \u001b[39m            \u001b[32m\"the completedTables property should automatically update when a table is completed\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 54 | \u001b[39m            \u001b[33m.\u001b[39mtoBe(completedTablesCount\u001b[33m+\u001b[39m\u001b[35m1\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m             \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 55 | \u001b[39m    })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 56 | \u001b[39m})\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 57 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-1.test.js\u001b[39m\u001b[0m\u001b[2m:54:14)\u001b[2m\u001b[22m\n","numFailingTests":3,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1557924531489,"start":1557924529667},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/tests/exercises/ex-1.test.js","testResults":[{"ancestorTitles":["exercise1"],"duration":10,"failureMessages":["Error: the restPopulation property should count the total number of people in the restaurant__stacktrace__\n    at Object.toBe (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/tests/exercises/ex-1.test.js:25:14)\n    at Object.asyncJestTest (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:41:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:71:41)\n    at processTicksAndRejections (internal/process/next_tick.js:81:5)"],"fullName":"exercise1 restPopulation should be a computed value in your restaurant store, which automatically calculates the number of people in your restaurant","location":null,"numPassingAsserts":0,"status":"failed","title":"restPopulation should be a computed value in your restaurant store, which automatically calculates the number of people in your restaurant"},{"ancestorTitles":["exercise1"],"duration":3,"failureMessages":[],"fullName":"exercise1 completeRes function should be a MobX action","location":null,"numPassingAsserts":0,"status":"passed","title":"completeRes function should be a MobX action"},{"ancestorTitles":["exercise1"],"duration":3,"failureMessages":["Error: the completeRes function should complete the table with the given ID__stacktrace__\n    at Object.toBe (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/tests/exercises/ex-1.test.js:41:14)\n    at Object.asyncJestTest (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:41:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:71:41)\n    at processTicksAndRejections (internal/process/next_tick.js:81:5)"],"fullName":"exercise1 completeRes function should complete the table with the given ID","location":null,"numPassingAsserts":0,"status":"failed","title":"completeRes function should complete the table with the given ID"},{"ancestorTitles":["exercise1"],"duration":5,"failureMessages":["Error: the completedTables property should automatically update when a table is completed__stacktrace__\n    at Object.toBe (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/tests/exercises/ex-1.test.js:54:14)\n    at Object.asyncJestTest (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:41:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:71:41)\n    at processTicksAndRejections (internal/process/next_tick.js:81:5)"],"fullName":"exercise1 completedTables should be a computed value in your restaurant store, which automatically calculates the number of tables that have been completed","location":null,"numPassingAsserts":0,"status":"failed","title":"completedTables should be a computed value in your restaurant store, which automatically calculates the number of tables that have been completed"}],"sourceMaps":{},"skipped":false,"leaks":false},{"console":null,"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise3 › each completed reservation should be conditionally rendered with the class \"conditional\"\u001b[39m\u001b[22m\n\n    TypeError: Cannot read property 'prototype' of undefined\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 18 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 19 | \u001b[39m    it(\u001b[32m'each completed reservation should be conditionally rendered with the class \"conditional\"'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 20 | \u001b[39m        \u001b[36mconst\u001b[39m wrapper \u001b[33m=\u001b[39m shallow(\u001b[33m<\u001b[39m\u001b[33mReservation\u001b[39m\u001b[33m.\u001b[39mwrappedComponent \u001b[33mRestaurantStore\u001b[39m\u001b[33m=\u001b[39m{restaurantStore} res\u001b[33m=\u001b[39m{newRes}\u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                        \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 21 | \u001b[39m        expect(wrapper\u001b[33m.\u001b[39mfind(\u001b[32m\".conditional\"\u001b[39m)\u001b[33m.\u001b[39mfirst()\u001b[33m.\u001b[39mhtml()\u001b[33m,\u001b[39m \u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 22 | \u001b[39m            \u001b[32m'each completed reservation should be conditionally rendered with the class \"conditional\"'\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 | \u001b[39m            \u001b[33m.\u001b[39mtoBeTruthy()\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.render (\u001b[2mnode_modules/enzyme-adapter-react-16/build/ReactSixteenAdapter.js\u001b[2m:465:44)\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat new ShallowWrapper (\u001b[2mnode_modules/enzyme/build/ShallowWrapper.js\u001b[2m:265:22)\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat shallow (\u001b[2mnode_modules/enzyme/build/shallow.js\u001b[2m:21:10)\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-3.test.js\u001b[39m\u001b[0m\u001b[2m:20:25)\u001b[2m\u001b[22m\n","numFailingTests":1,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1557924531507,"start":1557924529675},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/tests/exercises/ex-3.test.js","testResults":[{"ancestorTitles":["exercise3"],"duration":18,"failureMessages":["TypeError: Cannot read property 'prototype' of undefined\n    at Object.render (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/enzyme-adapter-react-16/build/ReactSixteenAdapter.js:465:44)\n    at new ShallowWrapper (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/enzyme/build/ShallowWrapper.js:265:22)\n    at shallow (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/enzyme/build/shallow.js:21:10)\n    at Object.<anonymous> (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/tests/exercises/ex-3.test.js:20:25)\n    at Object.asyncJestTest (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:41:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:71:41)\n    at processTicksAndRejections (internal/process/next_tick.js:81:5)"],"fullName":"exercise3 each completed reservation should be conditionally rendered with the class \"conditional\"","location":null,"numPassingAsserts":0,"status":"failed","title":"each completed reservation should be conditionally rendered with the class \"conditional\""}],"sourceMaps":{},"skipped":false,"leaks":false},{"console":null,"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise2 › the number of people in the restaurant should be rendered\u001b[39m\u001b[22m\n\n    You should display a div with the computed restPopulation__stacktrace__\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 25 | \u001b[39m        expect(wrapper\u001b[33m.\u001b[39mtext()\u001b[33m,\u001b[39m \u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 26 | \u001b[39m            \u001b[32m\"You should display a div with the computed restPopulation\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 27 | \u001b[39m            \u001b[33m.\u001b[39mtoContain(\u001b[32m\"4\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m             \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 28 | \u001b[39m    })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 29 | \u001b[39m    it(\u001b[32m'the number of completed tables should be rendered'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 30 | \u001b[39m        let bernard \u001b[33m=\u001b[39m restaurantStore\u001b[33m.\u001b[39mreservations\u001b[33m.\u001b[39mfind(r \u001b[33m=>\u001b[39m r\u001b[33m.\u001b[39mname \u001b[33m===\u001b[39m \u001b[32m\"Bernard\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toContain (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-2.test.js\u001b[39m\u001b[0m\u001b[2m:27:14)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise2 › the number of completed tables should be rendered\u001b[39m\u001b[22m\n\n    the number of completed tables should be rendered on the page__stacktrace__\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 33 | \u001b[39m        expect(wrapper\u001b[33m.\u001b[39mtext()\u001b[33m,\u001b[39m \u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 34 | \u001b[39m            \u001b[32m'the number of completed tables should be rendered on the page'\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 35 | \u001b[39m            \u001b[33m.\u001b[39mtoContain(\u001b[32m\"1\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m             \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 36 | \u001b[39m    })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 37 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 38 | \u001b[39m    it(\u001b[32m'The add reservation button should add a new reservation to the restaurant store using the general store to store inputs'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toContain (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-2.test.js\u001b[39m\u001b[0m\u001b[2m:35:14)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise2 › The add reservation button should add a new reservation to the restaurant store using the general store to store inputs\u001b[39m\u001b[22m\n\n    The add reservation button should add a new reservation to the restaurant store using the general store to store inputs__stacktrace__\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 46 | \u001b[39m        expect(restaurantStore\u001b[33m.\u001b[39mreservations\u001b[33m.\u001b[39mfind(r \u001b[33m=>\u001b[39m r\u001b[33m.\u001b[39mname \u001b[33m===\u001b[39m \u001b[32m\"Georgio\"\u001b[39m)\u001b[33m,\u001b[39m \u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 47 | \u001b[39m            \u001b[32m'The add reservation button should add a new reservation to the restaurant store using the general store to store inputs'\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 48 | \u001b[39m            \u001b[33m.\u001b[39mtoBeTruthy()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m             \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 49 | \u001b[39m    })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 50 | \u001b[39m    it(\u001b[32m'each reservation should be rendered using the reservation component'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 51 | \u001b[39m        \u001b[36mconst\u001b[39m wrapper \u001b[33m=\u001b[39m shallow(\u001b[33m<\u001b[39m\u001b[33mRestaurant\u001b[39m\u001b[33m.\u001b[39mwrappedComponent \u001b[33mRestaurantStore\u001b[39m\u001b[33m=\u001b[39m{restaurantStore} \u001b[33mGeneralStore\u001b[39m\u001b[33m=\u001b[39m{generalStore}\u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeTruthy (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-2.test.js\u001b[39m\u001b[0m\u001b[2m:48:14)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise2 › each reservation should be rendered using the reservation component\u001b[39m\u001b[22m\n\n    Your reservations should be mapped and rendered as an array of reservation components__stacktrace__\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 54 | \u001b[39m        expect(wrapper\u001b[33m.\u001b[39mfind(\u001b[33mReservation\u001b[39m)\u001b[33m,\u001b[39m \u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 55 | \u001b[39m            \u001b[32m\"Your reservations should be mapped and rendered as an array of reservation components\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 56 | \u001b[39m        \u001b[33m.\u001b[39mtoHaveLength(\u001b[35m1\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m         \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 57 | \u001b[39m    })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 58 | \u001b[39m    it(\u001b[32m'each reservation should have a \"Complete Reservation\" button'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 59 | \u001b[39m        \u001b[36mconst\u001b[39m wrapper \u001b[33m=\u001b[39m shallow(\u001b[33m<\u001b[39m\u001b[33mReservation\u001b[39m\u001b[33m.\u001b[39mwrappedComponent \u001b[33mRestaurantStore\u001b[39m\u001b[33m=\u001b[39m{restaurantStore} res\u001b[33m=\u001b[39m{newRes}\u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveLength (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-2.test.js\u001b[39m\u001b[0m\u001b[2m:56:10)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise2 › each reservation should have a \"Complete Reservation\" button\u001b[39m\u001b[22m\n\n    TypeError: Cannot read property 'prototype' of undefined\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 57 | \u001b[39m    })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 58 | \u001b[39m    it(\u001b[32m'each reservation should have a \"Complete Reservation\" button'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 59 | \u001b[39m        \u001b[36mconst\u001b[39m wrapper \u001b[33m=\u001b[39m shallow(\u001b[33m<\u001b[39m\u001b[33mReservation\u001b[39m\u001b[33m.\u001b[39mwrappedComponent \u001b[33mRestaurantStore\u001b[39m\u001b[33m=\u001b[39m{restaurantStore} res\u001b[33m=\u001b[39m{newRes}\u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                        \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 60 | \u001b[39m        expect(wrapper\u001b[33m.\u001b[39mfind(\u001b[32m'button'\u001b[39m)\u001b[33m.\u001b[39mlength\u001b[33m,\u001b[39m \u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 61 | \u001b[39m            \u001b[32m\"each reservation should have a 'Complete Reservation' button\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 62 | \u001b[39m        \u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.render (\u001b[2mnode_modules/enzyme-adapter-react-16/build/ReactSixteenAdapter.js\u001b[2m:465:44)\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat new ShallowWrapper (\u001b[2mnode_modules/enzyme/build/ShallowWrapper.js\u001b[2m:265:22)\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat shallow (\u001b[2mnode_modules/enzyme/build/shallow.js\u001b[2m:21:10)\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-2.test.js\u001b[39m\u001b[0m\u001b[2m:59:25)\u001b[2m\u001b[22m\n","numFailingTests":5,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1557924531608,"start":1557924529650},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/tests/exercises/ex-2.test.js","testResults":[{"ancestorTitles":["exercise2"],"duration":21,"failureMessages":["Error: You should display a div with the computed restPopulation__stacktrace__\n    at Object.toContain (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/tests/exercises/ex-2.test.js:27:14)\n    at Object.asyncJestTest (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:41:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:71:41)\n    at processTicksAndRejections (internal/process/next_tick.js:81:5)"],"fullName":"exercise2 the number of people in the restaurant should be rendered","location":null,"numPassingAsserts":0,"status":"failed","title":"the number of people in the restaurant should be rendered"},{"ancestorTitles":["exercise2"],"duration":4,"failureMessages":["Error: the number of completed tables should be rendered on the page__stacktrace__\n    at Object.toContain (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/tests/exercises/ex-2.test.js:35:14)\n    at Object.asyncJestTest (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:41:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:71:41)\n    at processTicksAndRejections (internal/process/next_tick.js:81:5)"],"fullName":"exercise2 the number of completed tables should be rendered","location":null,"numPassingAsserts":0,"status":"failed","title":"the number of completed tables should be rendered"},{"ancestorTitles":["exercise2"],"duration":7,"failureMessages":["Error: The add reservation button should add a new reservation to the restaurant store using the general store to store inputs__stacktrace__\n    at Object.toBeTruthy (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/tests/exercises/ex-2.test.js:48:14)\n    at Object.asyncJestTest (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:41:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:71:41)\n    at processTicksAndRejections (internal/process/next_tick.js:81:5)"],"fullName":"exercise2 The add reservation button should add a new reservation to the restaurant store using the general store to store inputs","location":null,"numPassingAsserts":0,"status":"failed","title":"The add reservation button should add a new reservation to the restaurant store using the general store to store inputs"},{"ancestorTitles":["exercise2"],"duration":17,"failureMessages":["Error: Your reservations should be mapped and rendered as an array of reservation components__stacktrace__\n    at Object.toHaveLength (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/tests/exercises/ex-2.test.js:56:10)\n    at Object.asyncJestTest (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:41:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:71:41)\n    at processTicksAndRejections (internal/process/next_tick.js:81:5)"],"fullName":"exercise2 each reservation should be rendered using the reservation component","location":null,"numPassingAsserts":0,"status":"failed","title":"each reservation should be rendered using the reservation component"},{"ancestorTitles":["exercise2"],"duration":6,"failureMessages":["TypeError: Cannot read property 'prototype' of undefined\n    at Object.render (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/enzyme-adapter-react-16/build/ReactSixteenAdapter.js:465:44)\n    at new ShallowWrapper (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/enzyme/build/ShallowWrapper.js:265:22)\n    at shallow (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/enzyme/build/shallow.js:21:10)\n    at Object.<anonymous> (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/tests/exercises/ex-2.test.js:59:25)\n    at Object.asyncJestTest (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:41:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:71:41)\n    at processTicksAndRejections (internal/process/next_tick.js:81:5)"],"fullName":"exercise2 each reservation should have a \"Complete Reservation\" button","location":null,"numPassingAsserts":0,"status":"failed","title":"each reservation should have a \"Complete Reservation\" button"}],"sourceMaps":{},"skipped":false,"leaks":false}],"wasInterrupted":false}