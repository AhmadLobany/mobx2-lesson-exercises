{"numFailedTestSuites":3,"numFailedTests":9,"numPassedTestSuites":0,"numPassedTests":1,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":3,"numTotalTests":10,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1554643447247,"success":false,"testResults":[{"console":null,"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise 2 › the number of people in the restaurant should be rendered with the id \"restPop\"\u001b[39m\u001b[22m\n\n    TypeError: Cannot read property 'prototype' of undefined\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 17 | \u001b[39m    })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 18 | \u001b[39m    it(\u001b[32m'the number of people in the restaurant should be rendered with the id \"restPop\"'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 19 | \u001b[39m        \u001b[36mconst\u001b[39m wrapper \u001b[33m=\u001b[39m shallow(\u001b[33m<\u001b[39m\u001b[33mReservation\u001b[39m\u001b[33m.\u001b[39mwrappedComponent \u001b[33mRestaurantStore\u001b[39m\u001b[33m=\u001b[39m{restaurantStore} res\u001b[33m=\u001b[39m{newRes}\u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                        \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 20 | \u001b[39m        expect(wrapper\u001b[33m.\u001b[39mfind(\u001b[32m\".conditional\"\u001b[39m)\u001b[33m.\u001b[39mhtml())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 21 | \u001b[39m    })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 22 | \u001b[39m})\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.render (\u001b[2mnode_modules/enzyme-adapter-react-16/build/ReactSixteenAdapter.js\u001b[2m:465:44)\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat new ShallowWrapper (\u001b[2mnode_modules/enzyme/build/ShallowWrapper.js\u001b[2m:265:22)\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat shallow (\u001b[2mnode_modules/enzyme/build/shallow.js\u001b[2m:21:10)\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-3.test.js\u001b[39m\u001b[0m\u001b[2m:19:25)\u001b[2m\u001b[22m\n","numFailingTests":1,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1554643451104,"start":1554643448705},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/tests/exercises/ex-3.test.js","testResults":[{"ancestorTitles":["exercise 2"],"duration":18,"failureMessages":["TypeError: Cannot read property 'prototype' of undefined\n    at Object.render (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/enzyme-adapter-react-16/build/ReactSixteenAdapter.js:465:44)\n    at new ShallowWrapper (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/enzyme/build/ShallowWrapper.js:265:22)\n    at shallow (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/enzyme/build/shallow.js:21:10)\n    at Object.<anonymous> (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/tests/exercises/ex-3.test.js:19:25)\n    at Object.asyncJestTest (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:41:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:71:41)\n    at processTicksAndRejections (internal/process/next_tick.js:81:5)"],"fullName":"exercise 2 the number of people in the restaurant should be rendered with the id \"restPop\"","location":null,"numPassingAsserts":0,"status":"failed","title":"the number of people in the restaurant should be rendered with the id \"restPop\""}],"sourceMaps":{},"skipped":false,"leaks":false},{"console":null,"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise1 › restPopulation should be a computed value in your restaurant store, which automatically calculates the number of people in your restaurant\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBe(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mNaN\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\n    Difference:\n\n      Comparing two different types of values. Expected \u001b[32mnumber\u001b[39m but received \u001b[31mundefined\u001b[39m.\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 20 | \u001b[39m                    \u001b[32m\"restPopulation should be a computed property\"\u001b[39m)\u001b[33m.\u001b[39mtoBeTruthy()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 21 | \u001b[39m        restaurantStore\u001b[33m.\u001b[39maddRes(\u001b[32m\"Gerald\"\u001b[39m\u001b[33m,\u001b[39m \u001b[35m2\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 22 | \u001b[39m        expect(restaurantStore\u001b[33m.\u001b[39mrestPopulation)\u001b[33m.\u001b[39mtoBe(restPopulation \u001b[33m+\u001b[39m \u001b[35m2\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                               \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 23 | \u001b[39m    })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 24 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 25 | \u001b[39m    it (\u001b[32m'completeRes function should be a MobX action'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-1.test.js\u001b[39m\u001b[0m\u001b[2m:22:48)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise1 › completeRes function should complete the table with the given ID\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBe(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 32 | \u001b[39m        let completed \u001b[33m=\u001b[39m bernard\u001b[33m.\u001b[39mcompleted\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 33 | \u001b[39m        restaurantStore\u001b[33m.\u001b[39mcompleteRes(bernard\u001b[33m.\u001b[39mid)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 34 | \u001b[39m        expect(bernard\u001b[33m.\u001b[39mcompleted)\u001b[33m.\u001b[39mtoBe(\u001b[33m!\u001b[39mcompleted)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                  \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 35 | \u001b[39m    })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 36 | \u001b[39m    \u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 37 | \u001b[39m    it(\u001b[32m\"completedTables should be a computed value in your restaurant store, which automatically calculates the number of tables that have been completed\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-1.test.js\u001b[39m\u001b[0m\u001b[2m:34:35)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise1 › completedTables should be a computed value in your restaurant store, which automatically calculates the number of tables that have been completed\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBe(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mNaN\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\n    Difference:\n\n      Comparing two different types of values. Expected \u001b[32mnumber\u001b[39m but received \u001b[31mundefined\u001b[39m.\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 43 | \u001b[39m        let res1 \u001b[33m=\u001b[39m restaurantStore\u001b[33m.\u001b[39mreservations\u001b[33m.\u001b[39mfind(r \u001b[33m=>\u001b[39m r\u001b[33m.\u001b[39mname \u001b[33m===\u001b[39m \u001b[32m\"Gerald\"\u001b[39m)\u001b[33m.\u001b[39mid\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 44 | \u001b[39m        restaurantStore\u001b[33m.\u001b[39mcompleteRes(res1)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 45 | \u001b[39m        expect(restaurantStore\u001b[33m.\u001b[39mcompletedTables)\u001b[33m.\u001b[39mtoBe(completedTables1\u001b[33m+\u001b[39m\u001b[35m1\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                                \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 46 | \u001b[39m    })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 47 | \u001b[39m})\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-1.test.js\u001b[39m\u001b[0m\u001b[2m:45:49)\u001b[2m\u001b[22m\n","numFailingTests":3,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1554643451142,"start":1554643448692},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/tests/exercises/ex-1.test.js","testResults":[{"ancestorTitles":["exercise1"],"duration":13,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBe(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mNaN\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n\nDifference:\n\n  Comparing two different types of values. Expected \u001b[32mnumber\u001b[39m but received \u001b[31mundefined\u001b[39m.\n    at Object.toBe (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/tests/exercises/ex-1.test.js:22:48)\n    at Object.asyncJestTest (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:41:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:71:41)\n    at processTicksAndRejections (internal/process/next_tick.js:81:5)"],"fullName":"exercise1 restPopulation should be a computed value in your restaurant store, which automatically calculates the number of people in your restaurant","location":null,"numPassingAsserts":0,"status":"failed","title":"restPopulation should be a computed value in your restaurant store, which automatically calculates the number of people in your restaurant"},{"ancestorTitles":["exercise1"],"duration":3,"failureMessages":[],"fullName":"exercise1 completeRes function should be a MobX action","location":null,"numPassingAsserts":0,"status":"passed","title":"completeRes function should be a MobX action"},{"ancestorTitles":["exercise1"],"duration":6,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBe(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.toBe (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/tests/exercises/ex-1.test.js:34:35)\n    at Object.asyncJestTest (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:41:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:71:41)\n    at processTicksAndRejections (internal/process/next_tick.js:81:5)"],"fullName":"exercise1 completeRes function should complete the table with the given ID","location":null,"numPassingAsserts":0,"status":"failed","title":"completeRes function should complete the table with the given ID"},{"ancestorTitles":["exercise1"],"duration":6,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toBe(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mNaN\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n\nDifference:\n\n  Comparing two different types of values. Expected \u001b[32mnumber\u001b[39m but received \u001b[31mundefined\u001b[39m.\n    at Object.toBe (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/tests/exercises/ex-1.test.js:45:49)\n    at Object.asyncJestTest (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:41:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:71:41)\n    at processTicksAndRejections (internal/process/next_tick.js:81:5)"],"fullName":"exercise1 completedTables should be a computed value in your restaurant store, which automatically calculates the number of tables that have been completed","location":null,"numPassingAsserts":0,"status":"failed","title":"completedTables should be a computed value in your restaurant store, which automatically calculates the number of tables that have been completed"}],"sourceMaps":{},"skipped":false,"leaks":false},{"console":null,"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise 2 › the number of people in the restaurant should be rendered with the id \"restPop\"\u001b[39m\u001b[22m\n\n    Method “text” is meant to be run on 1 node. 0 found instead.\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 24 | \u001b[39m        \u001b[90m// missing expect reason\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 25 | \u001b[39m        \u001b[90m// before you check the text, check if the div exists\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 26 | \u001b[39m        expect(wrapper\u001b[33m.\u001b[39mfind(\u001b[32m\"#restPop\"\u001b[39m)\u001b[33m.\u001b[39mtext())\u001b[33m.\u001b[39mtoBe(\u001b[32m\"4\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                        \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 27 | \u001b[39m    })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 28 | \u001b[39m    it(\u001b[32m'the number of completed tables should be rendered with the id \"completedTables\"'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 29 | \u001b[39m        let bernard \u001b[33m=\u001b[39m restaurantStore\u001b[33m.\u001b[39mreservations\u001b[33m.\u001b[39mfind(r \u001b[33m=>\u001b[39m r\u001b[33m.\u001b[39mname \u001b[33m===\u001b[39m \u001b[32m\"Bernard\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ShallowWrapper.single (\u001b[2mnode_modules/enzyme/build/ShallowWrapper.js\u001b[2m:1958:17)\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ShallowWrapper.text (\u001b[2mnode_modules/enzyme/build/ShallowWrapper.js\u001b[2m:1097:21)\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.text (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-2.test.js\u001b[39m\u001b[0m\u001b[2m:26:41)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise 2 › the number of completed tables should be rendered with the id \"completedTables\"\u001b[39m\u001b[22m\n\n    Method “text” is meant to be run on 1 node. 0 found instead.\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 30 | \u001b[39m        restaurantStore\u001b[33m.\u001b[39mcompleteRes(bernard\u001b[33m.\u001b[39mid)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 31 | \u001b[39m        \u001b[36mconst\u001b[39m wrapper \u001b[33m=\u001b[39m shallow(\u001b[33m<\u001b[39m\u001b[33mRestaurant\u001b[39m\u001b[33m.\u001b[39mwrappedComponent \u001b[33mRestaurantStore\u001b[39m\u001b[33m=\u001b[39m{restaurantStore}\u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 32 | \u001b[39m        expect(wrapper\u001b[33m.\u001b[39mfind(\u001b[32m\"#completedTables\"\u001b[39m)\u001b[33m.\u001b[39mtext())\u001b[33m.\u001b[39mtoBe(\u001b[32m\"1\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                                \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 33 | \u001b[39m    })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 34 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 35 | \u001b[39m    it(\u001b[32m'The add reservation button should add a new reservation to the restaurant store using the general store to store inputs'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ShallowWrapper.single (\u001b[2mnode_modules/enzyme/build/ShallowWrapper.js\u001b[2m:1958:17)\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat ShallowWrapper.text (\u001b[2mnode_modules/enzyme/build/ShallowWrapper.js\u001b[2m:1097:21)\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.text (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-2.test.js\u001b[39m\u001b[0m\u001b[2m:32:49)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise 2 › The add reservation button should add a new reservation to the restaurant store using the general store to store inputs\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 38 | \u001b[39m        \u001b[36mconst\u001b[39m wrapper \u001b[33m=\u001b[39m shallow(\u001b[33m<\u001b[39m\u001b[33mRestaurant\u001b[39m\u001b[33m.\u001b[39mwrappedComponent \u001b[33mRestaurantStore\u001b[39m\u001b[33m=\u001b[39m{restaurantStore} \u001b[33mGeneralStore\u001b[39m\u001b[33m=\u001b[39m{generalStore}\u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 39 | \u001b[39m        wrapper\u001b[33m.\u001b[39mfind(\u001b[32m\"#addRes\"\u001b[39m)\u001b[33m.\u001b[39msimulate(\u001b[32m\"click\"\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 40 | \u001b[39m        expect(restaurantStore\u001b[33m.\u001b[39mreservations\u001b[33m.\u001b[39mfind(r \u001b[33m=>\u001b[39m r\u001b[33m.\u001b[39mname \u001b[33m===\u001b[39m \u001b[32m\"Georgio\"\u001b[39m))\u001b[33m.\u001b[39mtoBeTruthy()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                                                             \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 41 | \u001b[39m    })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 42 | \u001b[39m    it(\u001b[32m'each reservation should be rendered using the reservation component'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 43 | \u001b[39m        \u001b[36mconst\u001b[39m wrapper \u001b[33m=\u001b[39m shallow(\u001b[33m<\u001b[39m\u001b[33mRestaurant\u001b[39m\u001b[33m.\u001b[39mwrappedComponent \u001b[33mRestaurantStore\u001b[39m\u001b[33m=\u001b[39m{restaurantStore} \u001b[33mGeneralStore\u001b[39m\u001b[33m=\u001b[39m{generalStore}\u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeTruthy (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-2.test.js\u001b[39m\u001b[0m\u001b[2m:40:78)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise 2 › each reservation should be rendered using the reservation component\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toHaveLength(\u001b[22m\u001b[32mlength\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected length: \u001b[32m1\u001b[39m\n    Received length: \u001b[31m0\u001b[39m\n    Received object: \u001b[31m{}\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 42 | \u001b[39m    it(\u001b[32m'each reservation should be rendered using the reservation component'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 43 | \u001b[39m        \u001b[36mconst\u001b[39m wrapper \u001b[33m=\u001b[39m shallow(\u001b[33m<\u001b[39m\u001b[33mRestaurant\u001b[39m\u001b[33m.\u001b[39mwrappedComponent \u001b[33mRestaurantStore\u001b[39m\u001b[33m=\u001b[39m{restaurantStore} \u001b[33mGeneralStore\u001b[39m\u001b[33m=\u001b[39m{generalStore}\u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 44 | \u001b[39m        expect(wrapper\u001b[33m.\u001b[39mfind(\u001b[32m'.reservations'\u001b[39m)\u001b[33m.\u001b[39mchildren())\u001b[33m.\u001b[39mtoHaveLength(\u001b[35m1\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                                                         \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 45 | \u001b[39m    })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 46 | \u001b[39m    it(\u001b[32m'each reservation should have a \"Complete Reservation\" button'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 47 | \u001b[39m        \u001b[36mconst\u001b[39m wrapper \u001b[33m=\u001b[39m shallow(\u001b[33m<\u001b[39m\u001b[33mReservation\u001b[39m\u001b[33m.\u001b[39mwrappedComponent \u001b[33mRestaurantStore\u001b[39m\u001b[33m=\u001b[39m{restaurantStore} res\u001b[33m=\u001b[39m{newRes}\u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveLength (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-2.test.js\u001b[39m\u001b[0m\u001b[2m:44:58)\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise 2 › each reservation should have a \"Complete Reservation\" button\u001b[39m\u001b[22m\n\n    TypeError: Cannot read property 'prototype' of undefined\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 45 | \u001b[39m    })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 46 | \u001b[39m    it(\u001b[32m'each reservation should have a \"Complete Reservation\" button'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 47 | \u001b[39m        \u001b[36mconst\u001b[39m wrapper \u001b[33m=\u001b[39m shallow(\u001b[33m<\u001b[39m\u001b[33mReservation\u001b[39m\u001b[33m.\u001b[39mwrappedComponent \u001b[33mRestaurantStore\u001b[39m\u001b[33m=\u001b[39m{restaurantStore} res\u001b[33m=\u001b[39m{newRes}\u001b[33m/\u001b[39m\u001b[33m>\u001b[39m)\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m                        \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 48 | \u001b[39m        expect(wrapper\u001b[33m.\u001b[39mfind(\u001b[32m'.completeRes'\u001b[39m)\u001b[33m.\u001b[39mhtml())\u001b[33m.\u001b[39mtoBeTruthy()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 49 | \u001b[39m    })\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 50 | \u001b[39m})\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.render (\u001b[2mnode_modules/enzyme-adapter-react-16/build/ReactSixteenAdapter.js\u001b[2m:465:44)\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat new ShallowWrapper (\u001b[2mnode_modules/enzyme/build/ShallowWrapper.js\u001b[2m:265:22)\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat shallow (\u001b[2mnode_modules/enzyme/build/shallow.js\u001b[2m:21:10)\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-2.test.js\u001b[39m\u001b[0m\u001b[2m:47:25)\u001b[2m\u001b[22m\n","numFailingTests":5,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1554643451313,"start":1554643448687},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/tests/exercises/ex-2.test.js","testResults":[{"ancestorTitles":["exercise 2"],"duration":21,"failureMessages":["Error: Method “text” is meant to be run on 1 node. 0 found instead.\n    at ShallowWrapper.single (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/enzyme/build/ShallowWrapper.js:1958:17)\n    at ShallowWrapper.text (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/enzyme/build/ShallowWrapper.js:1097:21)\n    at Object.text (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/tests/exercises/ex-2.test.js:26:41)\n    at Object.asyncJestTest (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:41:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:71:41)\n    at processTicksAndRejections (internal/process/next_tick.js:81:5)"],"fullName":"exercise 2 the number of people in the restaurant should be rendered with the id \"restPop\"","location":null,"numPassingAsserts":0,"status":"failed","title":"the number of people in the restaurant should be rendered with the id \"restPop\""},{"ancestorTitles":["exercise 2"],"duration":3,"failureMessages":["Error: Method “text” is meant to be run on 1 node. 0 found instead.\n    at ShallowWrapper.single (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/enzyme/build/ShallowWrapper.js:1958:17)\n    at ShallowWrapper.text (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/enzyme/build/ShallowWrapper.js:1097:21)\n    at Object.text (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/tests/exercises/ex-2.test.js:32:49)\n    at Object.asyncJestTest (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:41:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:71:41)\n    at processTicksAndRejections (internal/process/next_tick.js:81:5)"],"fullName":"exercise 2 the number of completed tables should be rendered with the id \"completedTables\"","location":null,"numPassingAsserts":0,"status":"failed","title":"the number of completed tables should be rendered with the id \"completedTables\""},{"ancestorTitles":["exercise 2"],"duration":5,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeTruthy\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBeTruthy (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/tests/exercises/ex-2.test.js:40:78)\n    at Object.asyncJestTest (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:41:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:71:41)\n    at processTicksAndRejections (internal/process/next_tick.js:81:5)"],"fullName":"exercise 2 The add reservation button should add a new reservation to the restaurant store using the general store to store inputs","location":null,"numPassingAsserts":0,"status":"failed","title":"The add reservation button should add a new reservation to the restaurant store using the general store to store inputs"},{"ancestorTitles":["exercise 2"],"duration":4,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).toHaveLength(\u001b[22m\u001b[32mlength\u001b[39m\u001b[2m)\u001b[22m\n\nExpected length: \u001b[32m1\u001b[39m\nReceived length: \u001b[31m0\u001b[39m\nReceived object: \u001b[31m{}\u001b[39m\n    at Object.toHaveLength (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/tests/exercises/ex-2.test.js:44:58)\n    at Object.asyncJestTest (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:41:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:71:41)\n    at processTicksAndRejections (internal/process/next_tick.js:81:5)"],"fullName":"exercise 2 each reservation should be rendered using the reservation component","location":null,"numPassingAsserts":0,"status":"failed","title":"each reservation should be rendered using the reservation component"},{"ancestorTitles":["exercise 2"],"duration":7,"failureMessages":["TypeError: Cannot read property 'prototype' of undefined\n    at Object.render (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/enzyme-adapter-react-16/build/ReactSixteenAdapter.js:465:44)\n    at new ShallowWrapper (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/enzyme/build/ShallowWrapper.js:265:22)\n    at shallow (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/enzyme/build/shallow.js:21:10)\n    at Object.<anonymous> (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/tests/exercises/ex-2.test.js:47:25)\n    at Object.asyncJestTest (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/jasmineAsyncInstall.js:102:37)\n    at resolve (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:41:12)\n    at new Promise (<anonymous>)\n    at mapper (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:26:19)\n    at promise.then (/Users/hunter/Repositories/Elevation/tests/mobx2-lesson-exercises/node_modules/jest-config/node_modules/jest-jasmine2/build/queueRunner.js:71:41)\n    at processTicksAndRejections (internal/process/next_tick.js:81:5)"],"fullName":"exercise 2 each reservation should have a \"Complete Reservation\" button","location":null,"numPassingAsserts":0,"status":"failed","title":"each reservation should have a \"Complete Reservation\" button"}],"sourceMaps":{},"skipped":false,"leaks":false}],"wasInterrupted":false}